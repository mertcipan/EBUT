package de.htwg_konstanz.ebus.wholesaler.action;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import de.htwg_konstanz.ebus.framework.wholesaler.api.security.Security;
import de.htwg_konstanz.ebus.wholesaler.demo.IAction;
import de.htwg_konstanz.ebus.wholesaler.demo.LoginBean;
import de.htwg_konstanz.ebus.wholesaler.demo.util.Constants;

public class ExportAction implements IAction {

	@Override
	public String execute(HttpServletRequest request, HttpServletResponse response, ArrayList<String> errorList) {
		// take the login bean from the session
		LoginBean bean = (LoginBean)request.getSession(true).getAttribute(Constants.PARAM_LOGIN_BEAN);
		
		// ensure that the user is logged in 
		if(bean != null && bean.isLoggedIn()){
			
			// ensure that the user is allowed to execute this action (authorization)
						// at this time the authorization is not fully implemented.
						// -> use the "Security.RESOURCE_ALL" constant which includes all resources.
						if (Security.getInstance().isUserAllowed(loginBean.getUser(), Security.RESOURCE_ALL, Security.ACTION_READ)){
							
							// servlet context for the relative path
							ServletContext context = request.getSession().getServletContext();
							
							// needed parameters
							String search = request.getParameter(Constants.ACTION_EXPORT_SEARCH);
							String view;
							String download;
							
						}
		}
		
		return null;
	}

	@Override
	public boolean accepts(String actionName) {
		// TODO Auto-generated method stub
		return false;
	}

}
